{"version":3,"sources":["reportWebVitals.js","components/section/Section.jsx","components/statistics/Statistics.jsx","components/feedbackOptions/FeedbackOptions.jsx","components/App.jsx","index.js","components/statistics/Statistics.module.css","components/feedbackOptions/FeedbackOptions.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Section","title","children","style","textAlign","fontSize","fontWeight","Statistics","feedbacks","total","positivePercentage","className","s","list","Object","entries","map","k","v","item","wrapper","FeedbackOptions","handleOnClick","type","name","onClick","btn","App","state","good","neutral","bad","e","target","setState","prevState","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","totalFeedback","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6MAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mDCcCQ,EAlBC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,mBACEC,MAAO,CAAEC,UAAW,SAAUC,SAAU,SAAUC,WAAY,QADhE,SAGGL,IAEFC,M,gBCyBQK,EA/BI,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACtC,OACE,cAAC,EAAD,CAAST,MAAM,aAAf,SACE,qBAAIU,UAAWC,IAAEC,KAAjB,UACGC,OAAOC,QAAQP,GAAWQ,KAAI,mCAAEC,EAAF,KAAKC,EAAL,YAC7B,qBAAYP,UAAWC,IAAEO,KAAzB,UACGF,EADH,MACQ,uBAAMN,UAAWC,IAAEQ,QAAnB,cAA8BF,OAD7BD,MAIX,qBAAIN,UAAWC,IAAEO,KAAjB,qBACU,sBAAMR,UAAWC,IAAEQ,QAAnB,SAA6BX,OAEvC,qBAAIE,UAAWC,IAAEO,KAAjB,kCACwB,IACtB,sBAAMR,UAAWC,IAAEQ,QAAnB,SAA6BV,a,gBCexBW,EA7BS,SAAC,GAAkC,IAAhCb,EAA+B,EAA/BA,UAAWc,EAAoB,EAApBA,cACpC,OACE,cAAC,EAAD,CAASrB,MAAM,wBAAf,SACE,qBAAKU,UAAWC,IAAEQ,QAAlB,SACGN,OAAOC,QAAQP,GAAWQ,KAAI,gBAAEC,EAAF,2BAC7B,wBAEEM,KAAK,SACLC,KAAMP,EACNQ,QAASH,EACTX,UAAWC,IAAEc,IALf,SAOGT,GANIA,WCPIU,E,4MACnBC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPT,cAAgB,SAAAU,GACd,IAAQR,EAASQ,EAAEC,OAAXT,KAER,EAAKU,UAAS,SAAAC,GAAS,sBACpBX,EAAOW,EAAUX,GAAQ,O,EAI9BY,mBAAqB,WACnB,OAAOtB,OAAOuB,OAAO,EAAKT,OAAOU,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAGvEC,gCAAkC,WAChC,IAAMC,EAAgB,EAAKN,qBAC3B,OAAsB,IAAlBM,EACK,EAEFC,KAAKC,MAAO,EAAKhB,MAAMC,KAAOa,EAAiB,M,4CAGxD,WACE,IAAMA,EAAgBG,KAAKT,qBAC3B,OACE,qCACE,cAAC,EAAD,CACE5B,UAAWqC,KAAKjB,MAChBN,cAAeuB,KAAKvB,gBAGrBoB,EAAgB,EACf,cAAC,EAAD,CACElC,UAAWqC,KAAKjB,MAChBnB,MAAOoC,KAAKT,qBACZ1B,mBAAoBmC,KAAKJ,oCAG3B,mBACEtC,MAAO,CACLC,UAAW,SACXC,SAAU,UAHd,uC,GA3CuByC,aCGjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B5D,K,kBChBA6D,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,QAAU,8B,kBCA5FD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,IAAM,gC","file":"static/js/main.56b407b5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <p\n        style={{ textAlign: 'center', fontSize: 'larger', fontWeight: 'bold' }}\n      >\n        {title}\n      </p>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Section from '../section/Section';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ feedbacks, total, positivePercentage }) => {\n  return (\n    <Section title=\"Statistics\">\n      <ul className={s.list}>\n        {Object.entries(feedbacks).map(([k, v]) => (\n          <li key={k} className={s.item}>\n            {k} : <span className={s.wrapper}> {v}</span>\n          </li>\n        ))}\n        <li className={s.item}>\n          Total : <span className={s.wrapper}>{total}</span>\n        </li>\n        <li className={s.item}>\n          % Positive Feedback :{' '}\n          <span className={s.wrapper}>{positivePercentage}</span>\n        </li>\n      </ul>\n    </Section>\n  );\n};\n\nStatistics.propTypes = {\n  feedbacks: PropTypes.shape({\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n  }),\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Section from '../section/Section';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ feedbacks, handleOnClick }) => {\n  return (\n    <Section title=\"Please leave feedback\">\n      <div className={s.wrapper}>\n        {Object.entries(feedbacks).map(([k]) => (\n          <button\n            key={k}\n            type=\"button\"\n            name={k}\n            onClick={handleOnClick}\n            className={s.btn}\n          >\n            {k}\n          </button>\n        ))}\n      </div>\n    </Section>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  feedbacks: PropTypes.shape({\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n  }),\n  handleOnClick: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React, { Component } from 'react';\nimport Statistics from './statistics/Statistics';\nimport FeedbackOptions from './feedbackOptions/FeedbackOptions';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleOnClick = e => {\n    const { name } = e.target;\n\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const totalFeedback = this.countTotalFeedback();\n    if (totalFeedback === 0) {\n      return 0;\n    }\n    return Math.round((this.state.good / totalFeedback) * 100);\n  };\n\n  render() {\n    const totalFeedback = this.countTotalFeedback();\n    return (\n      <>\n        <FeedbackOptions\n          feedbacks={this.state}\n          handleOnClick={this.handleOnClick}\n        />\n\n        {totalFeedback > 0 ? (\n          <Statistics\n            feedbacks={this.state}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <p\n            style={{\n              textAlign: 'center',\n              fontSize: 'larger',\n            }}\n          >\n            No feedback given.\n          </p>\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport App from './components/App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3eYkw\",\"item\":\"Statistics_item__V5txQ\",\"wrapper\":\"Statistics_wrapper__3ah31\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FeedbackOptions_wrapper__36Qrt\",\"btn\":\"FeedbackOptions_btn__5FzbO\"};"],"sourceRoot":""}